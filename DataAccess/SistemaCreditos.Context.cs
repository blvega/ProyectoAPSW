//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDProyectoAPSWEntities1 : DbContext
    {
        public BDProyectoAPSWEntities1()
            : base("name=BDProyectoAPSWEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clics> Clics { get; set; }
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Modulo> Modulo { get; set; }
        public virtual DbSet<Operaciones> Operaciones { get; set; }
        public virtual DbSet<Posicionamiento> Posicionamiento { get; set; }
        public virtual DbSet<Rol_operacion> Rol_operacion { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<SinFormalizar> SinFormalizar { get; set; }
        public virtual DbSet<SinRegistro> SinRegistro { get; set; }
        public virtual DbSet<Solicitudes> Solicitudes { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Creditos> Creditos { get; set; }
    
        public virtual int RegistroSolicitud(string identificacion, Nullable<decimal> monto, string nombreCre, Nullable<decimal> tasaInteres, string nombre, string primerApellido, string segundoApellido, string telefono, string correo, Nullable<System.DateTime> fechaNacimiento, Nullable<decimal> salarioNeto, string password, Nullable<int> idRol, Nullable<System.DateTime> fecha)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var nombreCreParameter = nombreCre != null ?
                new ObjectParameter("NombreCre", nombreCre) :
                new ObjectParameter("NombreCre", typeof(string));
    
            var tasaInteresParameter = tasaInteres.HasValue ?
                new ObjectParameter("TasaInteres", tasaInteres) :
                new ObjectParameter("TasaInteres", typeof(decimal));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var salarioNetoParameter = salarioNeto.HasValue ?
                new ObjectParameter("SalarioNeto", salarioNeto) :
                new ObjectParameter("SalarioNeto", typeof(decimal));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("idRol", idRol) :
                new ObjectParameter("idRol", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistroSolicitud", identificacionParameter, montoParameter, nombreCreParameter, tasaInteresParameter, nombreParameter, primerApellidoParameter, segundoApellidoParameter, telefonoParameter, correoParameter, fechaNacimientoParameter, salarioNetoParameter, passwordParameter, idRolParameter, fechaParameter);
        }
    
        public virtual int RegistroCliente(string identificacion, string nombre, string primerApellido, string segundoApellido, string telefono, string correo, Nullable<System.DateTime> fechaNacimiento, Nullable<decimal> salarioNeto, string password, Nullable<int> idRol)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var salarioNetoParameter = salarioNeto.HasValue ?
                new ObjectParameter("SalarioNeto", salarioNeto) :
                new ObjectParameter("SalarioNeto", typeof(decimal));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("idRol", idRol) :
                new ObjectParameter("idRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistroCliente", identificacionParameter, nombreParameter, primerApellidoParameter, segundoApellidoParameter, telefonoParameter, correoParameter, fechaNacimientoParameter, salarioNetoParameter, passwordParameter, idRolParameter);
        }
    }
}
